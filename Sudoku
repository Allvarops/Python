# SUDOKU

def enter_Soduku():
    lines = []
    for i in range(9):
        ent = ''
        while len(ent) != 9:
            print(str(i) + ':=>', end = '')
            ent = input()
            cent = ent
            for x in cent:
                if x not in ['0','1','2','3','4','5','6','7','8','9']:
                    ent = ''     
        lines.append(ent)
    return(lines)

    

def make_Board(brd):
    cbrd = []
    for l in brd:
        pbrd = []
        for j in l:
            if j =='0':
                temp = []
                for x in range(1,10):
                    if str(x) not in l:
                        temp.append(x)
                pbrd.append(temp)
            else:
                pbrd.append(int(j))            
        cbrd.append(pbrd)        
    return cbrd

def unico(line):
    line_copy = line.copy()
    lenline = len(line)
    ln = []
    num = 0
    for li in range(lenline):
        if type(line[li]) == type([]):
            for nl in line[li]:
                count = 0
                for allines in line:
                    if type(allines) == type([]):
                        if nl in allines:
                            count += 1
                if count == 1:
                    line_copy[li] = nl                     
    return line_copy
  
def verify_Line(line):
    col = []
    for i in line:
        if type(i) == type([]):
            j = i.copy()
            for x in range(len(i)):
                if i[x] in line:
                    d = j.index(i[x])
                    j.pop(d)
            if len(j) == 1:
                i = j.pop(0)
            else:
                i = j
        col.append(i)
        #col = unico(col)
    return col

def turn_LC(lines):
    coluna = []
    col = []
    for j in range(9):
        for i in lines:
            col.append(i[j])
        col = verify_Line(col)
        coluna.append(col)
        col = []
    return coluna

def turn_Matx(lines):
    mtx = []
    mtxt = []
    m1,m2,m3 = (),(),()
    x = 0
    for i in lines:
        m1 = m1 + tuple(i[0:3])
        m2 = m2 + tuple(i[3:6])
        m3 = m3 + tuple(i[6:9])
        x += 1
        if x == 3:
            mtx.append(list(m1))
            mtx.append(list(m2))
            mtx.append(list(m3))
            x = 0
            m1,m2,m3 = (),(),()
    for i in mtx:
        mtxt.append(verify_Line(i))
    return mtxt

def press(sodu):
    for i in sodu:
        print('[', end='')
        for j in i:
            if type(j) == type([]):
                print('0', end = ' ')
            else:
                print(j, end = ' ')
        print(']')
                
    print('--------------------')

lines = enter_Soduku()
#lines = ['070002048','500078060','083604210','715000020','020701080','030000401','068209754','090580006','350400092']
lin = ''
board = lines #linhas iniciais do Sudoku
lines = make_Board(board) #Transforma lines em uma matrix
press(lines)

for i in range(5):
    cols = turn_LC(lines) # transforma matrix linha em matrix coluna
    print('Coluns')
    press(cols)
    lines = turn_LC(cols) # transforma matrix coluna em matrix linha
    print('Lines')
    press(lines)
    matrix = turn_Matx(lines)    
    print('Matrix')
    press(matrix)
    lines = turn_Matx(matrix)
    print('Lines')
    press(lines)
